## Autogenerated by Scribe. DO NOT MODIFY.

name: Tasks
description: |-

  APIs for managing tasks
endpoints:
  -
    httpMethods:
      - GET
    uri: api/tasks
    metadata:
      groupName: Tasks
      groupDescription: |-

        APIs for managing tasks
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all tasks.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "title": "Sample Task",
                "description": "This is a sample task.",
                "due_date": "2024-12-31T23:59:59Z",
                "is_completed": false,
                "created_at": "2024-01-01T12:00:00Z",
                "updated_at": "2024-01-01T12:00:00Z"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"message": "Server Error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer 1|abcdef1234567890...'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/tasks
    metadata:
      groupName: Tasks
      groupDescription: |-

        APIs for managing tasks
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new task.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the task.'
        required: true
        example: '"New Task"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The description of the task.'
        required: false
        example: '"This is a new task."'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      due_date:
        name: due_date
        description: 'The due date of the task.'
        required: true
        example: '2024-12-31'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      is_completed:
        name: is_completed
        description: 'Whether the task is completed.'
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      title: '"New Task"'
      description: '"This is a new task."'
      due_date: '2024-12-31'
      is_completed: false
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id": 1,
            "title": "New Task",
            "description": "This is a new task.",
            "due_date": "2024-12-31T23:59:59Z",
            "is_completed": false,
            "created_at": "2024-01-01T12:00:00Z",
            "updated_at": "2024-01-01T12:00:00Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {"title": ["The title field is required."]}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"message": "Server Error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer 1|abcdef1234567890...'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tasks/{id}'
    metadata:
      groupName: Tasks
      groupDescription: |-

        APIs for managing tasks
      subgroup: ''
      subgroupDescription: ''
      title: 'Show a specific task.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      task:
        name: task
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
      task: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "title": "Sample Task",
            "description": "This is a sample task.",
            "due_date": "2024-12-31T23:59:59Z",
            "is_completed": false,
            "created_at": "2024-01-01T12:00:00Z",
            "updated_at": "2024-01-01T12:00:00Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "No query results for model [App\\Models\\Task] 999"}'
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"message": "Server Error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer 1|abcdef1234567890...'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/tasks/{id}'
    metadata:
      groupName: Tasks
      groupDescription: |-

        APIs for managing tasks
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a task.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      task:
        name: task
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
      task: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the task.'
        required: false
        example: '"Updated Task"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The description of the task.'
        required: false
        example: '"This task has been updated."'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      due_date:
        name: due_date
        description: 'The due date of the task.'
        required: false
        example: '2024-12-31'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      is_completed:
        name: is_completed
        description: 'Whether the task is completed.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      title: '"Updated Task"'
      description: '"This task has been updated."'
      due_date: '2024-12-31'
      is_completed: true
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "title": "Updated Task",
            "description": "This task has been updated.",
            "due_date": "2024-12-31T23:59:59Z",
            "is_completed": true,
            "created_at": "2024-01-01T12:00:00Z",
            "updated_at": "2024-01-02T12:00:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer 1|abcdef1234567890...'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/tasks/{id}'
    metadata:
      groupName: Tasks
      groupDescription: |-

        APIs for managing tasks
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a task.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      task:
        name: task
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
      task: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: 'null'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer 1|abcdef1234567890...'
    controller: null
    method: null
    route: null
    custom: []
