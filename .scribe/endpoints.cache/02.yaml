## Autogenerated by Scribe. DO NOT MODIFY.

name: products
description: 'APIs for managing products'
endpoints:
  -
    httpMethods:
      - GET
    uri: api/products
    metadata:
      groupName: products
      groupDescription: 'APIs for managing products'
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
            {
             "id": 1,
             "name": "Sample Product",
             "description": "This is a sample product.",
             "price": "19.99",
             "stock": 100,
             "featured": false,
             "created_at": "2024-01-01T12:00:00Z",
             "updated_at": "2024-01-01T12:00:00Z"
            }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"message": "Server Error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer 1|abcdef1234567890...'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/products
    metadata:
      groupName: products
      groupDescription: 'APIs for managing products'
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the product.'
        required: true
        example: '"New Product"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The description of the product.'
        required: true
        example: '"This is a new product."'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      price:
        name: price
        description: 'The price of the product.'
        required: true
        example: '19.99'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      stock:
        name: stock
        description: 'The stock quantity of the product.'
        required: true
        example: 100
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      featured:
        name: featured
        description: 'Whether the product is featured.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      name: '"New Product"'
      description: '"This is a new product."'
      price: '19.99'
      stock: 100
      featured: false
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id": 1,
            "name": "New Product",
            "description": "This is a new product.",
            "price": "19.99",
            "stock": 100,
            "featured": false,
            "created_at": "2024-01-01T12:00:00Z",
            "updated_at": "2024-01-01T12:00:00Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {"name": ["The name field is required."]}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"message": "Server Error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer 1|abcdef1234567890...'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/products/{id}'
    metadata:
      groupName: products
      groupDescription: 'APIs for managing products'
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "name": "Sample Product",
            "description": "This is a sample product.",
            "price": "19.99",
            "stock": 100,
            "featured": false,
            "created_at": "2024-01-01T12:00:00Z",
            "updated_at": "2024-01-01T12:00:00Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "No query results for model [App\\Models\\Product] 999"}'
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"message": "Server Error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer 1|abcdef1234567890...'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/products/{id}'
    metadata:
      groupName: products
      groupDescription: 'APIs for managing products'
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the product.'
        required: false
        example: '"Updated Product"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The description of the product.'
        required: false
        example: '"This is an updated product."'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      price:
        name: price
        description: 'The price of the product.'
        required: false
        example: '29.99'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      stock:
        name: stock
        description: 'The stock quantity of the product.'
        required: false
        example: 150
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      featured:
        name: featured
        description: 'Whether the product is featured.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: '"Updated Product"'
      description: '"This is an updated product."'
      price: '29.99'
      stock: 150
      featured: true
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer 1|abcdef1234567890...'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/products/{id}'
    metadata:
      groupName: products
      groupDescription: 'APIs for managing products'
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: 'No Content'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Product Not Found"}'
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"message": "Server Error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer 1|abcdef1234567890...'
    controller: null
    method: null
    route: null
    custom: []
